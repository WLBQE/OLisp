(print true)
(print "Hello world!\nHello OLisp!")
(print 3.9)
(print 666)

(i2d 3)
(print (d2i (i2d 5)))

(define (int a) (+ 3 5))

(+ 1 a)

(if true print print)

((begin 1 3.5 (if true print print)) 3)

(+ 1 2 3 4 5)
(+ 1.0 2.3 5.5)

(% 8 (+ 4 5))

(car (list int 1 2 3))
(cdr (list double 2.5))

(define ((double -> int) foo) (lambda (double -> int) (a) (d2i (+ a 1.22))))
(foo 1.2)

(class boo
  (member (string a))
  (constructor a))

(class trivial
  (member (int bar))
  (member (boo blaz))
  (constructor bar blaz))

(class circle
  (member (double radius))
  (member (string color))
  (member (trivial foo) (trivial 2 (boo "haha")))
  (member (bool baz) true)
  (constructor radius color))

(define (circle c) (circle 2.5 "blue"))
(print circle.foo.bar)
(print circle.foo.blaz.a)
