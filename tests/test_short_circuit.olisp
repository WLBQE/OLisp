(define ((void -> bool) t) (lambda (void -> bool) () (begin (print true) true)))
(define ((void -> bool) f) (lambda (void -> bool) () (begin (print false) false)))

(print (and (t) (f) (t)))
(print "")
(print (and (t) (t) (t)))
(print "")
(print (or (f) (t) (f)))
(print "")
(print (or (f) (f) (f)))
(print "")
(print (or (f) (f)))
(print "")
(print (and (t) (t)))
(print "")
(print (or (t) (f)))
(print "")
(print (and (f) (t)))
(print "")

(define ((int -> bool) factor_of_12) (lambda (int -> bool) (n) (and (> n 0) (= (% 12 n) 0))))

(print (factor_of_12 0))
(print (factor_of_12 2))
(print (factor_of_12 5))
