(class grade
  (member (double total))
  (member (double plt))
  (member ((grade -> bool) less_than) 
    (lambda (grade -> bool) (other)
      (if (= total othertotal)
        (< plt otherplt)
        (< total othertotal))))
  (constructor total plt))

(define (([grade] (grade -> bool) -> [grade]) filter)
  (lambda ([grade] (grade -> bool) -> [grade]) (lst cond)
    (if (empty lst)
      (list grade)
      (if (cond (car lst))
        (cons (car lst)
          (filter (cdr lst) cond))
        (filter (cdr lst) cond)))))

(define (([grade] -> [grade]) qsort)
  (lambda ([grade] -> [grade]) (lst)
    (if (empty lst)
      (list grade)
      (append (qsort (filter lst less_than))
        (list grade (car lst))
        (qsort (filter lst (lambda (grade -> bool) (elem)
          (not (grade.less_than elem)))))))))

(define (grade Alice) (grade 3.8 4.0))
(define (grade Bob) (grade 3.2 2.67))
(define (grade Carol) (grade 3.8 3.67))
(define (grade Jiaqi) (grade 4.33 4.33))

(define ([grade] sorted) (qsort (list grade Alice Bob Carol Jiaqi)))
